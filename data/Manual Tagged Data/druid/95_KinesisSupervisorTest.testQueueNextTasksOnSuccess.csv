testClassName,testMethodName,potentialTargetQualifiedName,AAA
KinesisSupervisorTest,testQueueNextTasksOnSuccess,          NEW org.joda.time.Period(Object),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,          NEW org.joda.time.Period(Object),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,          NEW org.joda.time.Period(Object),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,          NEW org.joda.time.Period(Object),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"          NEW org.apache.druid.indexing.kinesis.supervisor.KinesisSupervisorIOConfig(String, InputFormat, String, KinesisRegion, Integer, Integer, Period, Period, Period, Boolean, Period, Period, Period, DateTime, Integer, Integer, String, String, boolean)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"          NEW anonymous(HttpClient, ObjectMapper)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"          ASSERT org.junit.Assert.assertEquals(long, long)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"          ASSERT org.junit.Assert.assertEquals(Object, Object)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"          ASSERT org.junit.Assert.assertEquals(long, long)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,          NEW org.apache.druid.server.metrics.NoopServiceEmitter(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,          NEW org.apache.druid.server.metrics.DruidMonitorSchedulerConfig(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"          NEW org.apache.druid.indexing.kinesis.supervisor.KinesisSupervisorSpec(KinesisSupervisorIngestionSpec, DataSchema, KinesisSupervisorTuningConfig, KinesisSupervisorIOConfig, Map<String,Object>, Boolean, TaskStorage, TaskMaster, IndexerMetadataStorageCoordinator, KinesisIndexTaskClientFactory, ObjectMapper, ServiceEmitter, DruidMonitorSchedulerConfig, RowIngestionMetersFactory, AWSCredentialsConfig, SupervisorStateManagerConfig)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"          NEW org.apache.druid.indexing.kinesis.supervisor.KinesisSupervisorTest.TestableKinesisSupervisor(TaskStorage, TaskMaster, IndexerMetadataStorageCoordinator, KinesisIndexTaskClientFactory, ObjectMapper, KinesisSupervisorSpec, RowIngestionMetersFactory)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyObject(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.kinesis.KinesisRecordSupplier.assign(Set<StreamPartition<String>>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expectLastCall(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.lang.Object>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.kinesis.KinesisRecordSupplier.getPartitionIds(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Set<String>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.Set<java.lang.String>>.andReturn(Set<String>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.Set<java.lang.String>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.kinesis.KinesisRecordSupplier.getAssignment(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Collection<StreamPartition<String>>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.Collection<org.apache.druid.indexing.seekablestream.common.StreamPartition<java.lang.String>>>.andReturn(Collection<StreamPartition<String>>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.Collection<org.apache.druid.indexing.seekablestream.common.StreamPartition<java.lang.String>>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyObject(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.kinesis.KinesisRecordSupplier.seekToLatest(Set<StreamPartition<String>>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expectLastCall(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.lang.Object>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyObject(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.kinesis.KinesisRecordSupplier.getEarliestSequenceNumber(StreamPartition<String>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.lang.String>.andReturn(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.lang.String>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyObject(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.kinesis.KinesisRecordSupplier.getLatestSequenceNumber(StreamPartition<String>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.lang.String>.andReturn(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.lang.String>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyObject(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyString(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"org.apache.druid.indexing.kinesis.KinesisRecordSupplier.seek(StreamPartition<String>, String)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expectLastCall(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.lang.Object>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.Capture.newInstance(CaptureType),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskMaster.getTaskQueue(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Optional<TaskQueue>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.overlord.TaskQueue>>.andReturn(Optional<TaskQueue>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.overlord.TaskQueue>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskMaster.getTaskRunner(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Optional<TaskRunner>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.overlord.TaskRunner>>.andReturn(Optional<TaskRunner>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.overlord.TaskRunner>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskRunner.getRunningTasks(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Collection<>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.Collection<>>.andReturn(Collection<>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.Collection<>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskStorage.getActiveTasksByDatasource(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(List<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.List<org.apache.druid.indexing.common.task.Task>>.andReturn(List<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.List<org.apache.druid.indexing.common.task.Task>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyString(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getStatusAsync(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(ListenableFuture<Status>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner.Status>>.andReturn(ListenableFuture<Status>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner.Status>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyString(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getStartTimeAsync(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(ListenableFuture<DateTime>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.java.util.common.DateTimes.nowUtc(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<org.joda.time.DateTime>>.andReturn(ListenableFuture<DateTime>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<org.joda.time.DateTime>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.IndexerMetadataStorageCoordinator.retrieveDataSourceMetadata(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(DataSourceMetadata),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"NEW org.apache.druid.indexing.kinesis.KinesisDataSourceMetadata(SeekableStreamSequenceNumbers<String,String>)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<org.apache.druid.indexing.overlord.DataSourceMetadata>.andReturn(DataSourceMetadata),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<org.apache.druid.indexing.overlord.DataSourceMetadata>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.capture(Capture<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskQueue.add(Task),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Boolean),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.lang.Boolean>.andReturn(Boolean),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.lang.Boolean>.times(int),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyObject(Class<TaskRunnerListener>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyObject(Class<Executor>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"org.apache.druid.indexing.overlord.TaskRunner.registerListener(TaskRunnerListener, Executor)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMockSupport.replayAll(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisor.start(),1
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisor.runInternal(),1
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMockSupport.verifyAll(),2
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.Capture<org.apache.druid.indexing.common.task.Task>.getValues(),2
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.reset(Object[]),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.reset(Object[]),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyString(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getStatusAsync(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(ListenableFuture<Status>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner.Status>>.andReturn(ListenableFuture<Status>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner.Status>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyString(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getStartTimeAsync(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(ListenableFuture<DateTime>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.java.util.common.DateTimes.nowUtc(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<org.joda.time.DateTime>>.andReturn(ListenableFuture<DateTime>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<org.joda.time.DateTime>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.contains(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyBoolean(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getCheckpointsAsync(String, boolean)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"MOCK org.easymock.EasyMock.expect(ListenableFuture<TreeMap<Integer,Map<String,String>>>)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<java.util.TreeMap<java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>>>>.andReturn(ListenableFuture<TreeMap<Integer,Map<String,String>>>)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<java.util.TreeMap<java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>>>>.times(int)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.contains(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.anyBoolean(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getCheckpointsAsync(String, boolean)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"MOCK org.easymock.EasyMock.expect(ListenableFuture<TreeMap<Integer,Map<String,String>>>)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<java.util.TreeMap<java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>>>>.andReturn(ListenableFuture<TreeMap<Integer,Map<String,String>>>)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<java.util.TreeMap<java.lang.Integer,java.util.Map<java.lang.String,java.lang.String>>>>.times(int)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskStorage.getActiveTasksByDatasource(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(List<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.List<org.apache.druid.indexing.common.task.Task>>.andReturn(List<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.List<org.apache.druid.indexing.common.task.Task>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.common.task.Task.getId(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskStorage.getStatus(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Optional<TaskStatus>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.common.task.Task.getId(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexer.TaskStatus.running(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexer.TaskStatus>>.andReturn(Optional<TaskStatus>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexer.TaskStatus>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.common.task.Task.getId(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskStorage.getTask(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Optional<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.common.task.Task>>.andReturn(Optional<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.common.task.Task>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.replay(Object[]),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.replay(Object[]),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisor.runInternal(),1
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMockSupport.verifyAll(),2
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.Capture.newInstance(CaptureType),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.Capture.newInstance(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.reset(Object[]),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.reset(Object[]),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.reset(Object[]),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskStorage.getActiveTasksByDatasource(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(List<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.List<org.apache.druid.indexing.common.task.Task>>.andReturn(List<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.util.List<org.apache.druid.indexing.common.task.Task>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.common.task.Task.getId(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskStorage.getStatus(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Optional<TaskStatus>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.common.task.Task.getId(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexer.TaskStatus.running(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexer.TaskStatus>>.andReturn(Optional<TaskStatus>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexer.TaskStatus>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.common.task.Task.getId(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskStorage.getTask(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Optional<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.common.task.Task>>.andReturn(Optional<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.common.task.Task>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.common.task.AbstractTask.getId(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskStorage.getStatus(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Optional<TaskStatus>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.common.task.AbstractTask.getId(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexer.TaskStatus.success(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexer.TaskStatus>>.andReturn(Optional<TaskStatus>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.common.task.AbstractTask.getId(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskStorage.getTask(String),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Optional<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.common.task.Task>>.andReturn(Optional<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.common.task.Task>>.anyTimes(),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.capture(Capture<Task>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.overlord.TaskQueue.add(Task),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(Boolean),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.lang.Boolean>.andReturn(Boolean),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<java.lang.Boolean>.times(int),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.capture(Capture<String>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.eq(boolean),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,"org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.stopAsync(String, boolean)",0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.expect(ListenableFuture<Boolean>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<java.lang.Boolean>>.andReturn(ListenableFuture<Boolean>),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.replay(Object[]),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.replay(Object[]),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMock.replay(Object[]),0
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisor.runInternal(),1
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.EasyMockSupport.verifyAll(),2
KinesisSupervisorTest,testQueueNextTasksOnSuccess,MOCK org.easymock.Capture<java.lang.String>.getValue(),2
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.kinesis.KinesisIndexTask.getIOConfig(),2
KinesisSupervisorTest,testQueueNextTasksOnSuccess,org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskIOConfig.getBaseSequenceName(),2
KinesisSupervisorTest,testQueueNextTasksOnSuccess,ASSERT org.junit.Assert.assertTrue(boolean),2
