testClassName,testMethodName,potentialTargetQualifiedName,AAA
VarianceGroupByQueryTest,testGroupByZtestPostAgg,org.apache.druid.query.groupby.GroupByQuery.builder(),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,org.apache.druid.query.groupby.GroupByQuery.Builder.setDataSource(String),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,org.apache.druid.query.groupby.GroupByQuery.Builder.setQuerySegmentSpec(QuerySegmentSpec),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"NEW org.apache.druid.query.dimension.DefaultDimensionSpec(String, String)",0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,org.apache.druid.query.groupby.GroupByQuery.Builder.setDimensions(DimensionSpec[]),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"NEW org.apache.druid.query.aggregation.LongSumAggregatorFactory(String, String)",0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,org.apache.druid.query.groupby.GroupByQuery.Builder.setAggregatorSpecs(AggregatorFactory[]),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"NEW org.apache.druid.query.aggregation.post.FieldAccessPostAggregator(String, String)",0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"NEW org.apache.druid.query.aggregation.post.ConstantPostAggregator(String, Number)",0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"NEW org.apache.druid.query.aggregation.post.FieldAccessPostAggregator(String, String)",0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"NEW org.apache.druid.query.aggregation.post.ConstantPostAggregator(String, Number)",0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"NEW org.apache.druid.query.aggregation.teststats.ZtestPostAggregator(String, PostAggregator, PostAggregator, PostAggregator, PostAggregator)",0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,org.apache.druid.query.groupby.GroupByQuery.Builder.setPostAggregatorSpecs(List<PostAggregator>),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,org.apache.druid.query.groupby.orderby.OrderByColumnSpec.descending(String[]),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"NEW org.apache.druid.query.groupby.orderby.DefaultLimitSpec(List<OrderByColumnSpec>, Integer)",0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,org.apache.druid.query.groupby.GroupByQuery.Builder.setLimitSpec(LimitSpec),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,org.apache.druid.query.groupby.GroupByQuery.Builder.setGranularity(Granularity),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,org.apache.druid.query.groupby.GroupByQuery.Builder.build(),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,NEW org.apache.druid.query.aggregation.variance.VarianceTestHelper.RowBuilder(String[]),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,          org.apache.druid.java.util.common.DateTimes.of(String),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"          NEW org.apache.druid.data.input.MapBasedRow(DateTime, Map<String,Object>)",0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"     org.apache.druid.query.groupby.ResultRow.fromLegacyRow(Row, GroupByQuery)",0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,     org.apache.druid.query.QueryRunnerFactory.getToolchest(),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"     NEW org.apache.druid.query.FinalizeResultsQueryRunner(QueryRunner, QueryToolChest)",0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,     org.apache.druid.query.QueryPlus.wrap(Query<T>),0
VarianceGroupByQueryTest,testGroupByZtestPostAgg,     org.apache.druid.query.QueryRunner.run(QueryPlus<T>),1
VarianceGroupByQueryTest,testGroupByZtestPostAgg,     org.apache.druid.java.util.common.guava.Sequence.toList(),2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"          org.apache.druid.java.util.common.StringUtils.format(String, Object[])",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"               org.apache.druid.java.util.common.StringUtils.format(String, Object[])",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,               org.apache.druid.query.groupby.ResultRow.length(),2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,               org.apache.druid.query.groupby.ResultRow.length(),2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"               ASSERT org.junit.Assert.assertEquals(String, long, long)",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,               org.apache.druid.query.groupby.ResultRow.length(),2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"               org.apache.druid.java.util.common.StringUtils.format(String, Object[])",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,               org.apache.druid.query.groupby.ResultRow.get(int),2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,               org.apache.druid.query.groupby.ResultRow.get(int),2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"               ASSERT org.junit.Assert.assertEquals(String, double, double, double)",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"               ASSERT org.junit.Assert.assertEquals(String, Object, Object)",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"          TEST org.apache.druid.segment.TestHelper.assertRow(String, ResultRow, ResultRow)",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"          ASSERT org.junit.Assert.assertEquals(String, Object, Object)",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"          ASSERT org.junit.Assert.assertEquals(String, Object, Object)",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"          org.apache.druid.java.util.common.StringUtils.format(String, Object[])",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,          ASSERT org.junit.Assert.fail(String),2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"          org.apache.druid.java.util.common.StringUtils.format(String, Object[])",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,          ASSERT org.junit.Assert.fail(String),2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,"          org.apache.druid.java.util.common.StringUtils.format(String, Object[])",2
VarianceGroupByQueryTest,testGroupByZtestPostAgg,          ASSERT org.junit.Assert.fail(String),2
