testClassName,testMethodName,potentialTargetQualifiedName,AAA
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"NEW org.apache.druid.indexer.TaskLocation(String, int, int)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"NEW org.apache.druid.indexer.TaskLocation(String, int, int)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.java.util.common.DateTimes.nowUtc(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,               org.apache.druid.indexing.kafka.KafkaConsumerConfigs.getConsumerProperties(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,               NEW org.joda.time.Period(Object),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,               NEW org.joda.time.Period(Object),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,               NEW org.joda.time.Period(Object),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,               NEW org.joda.time.Period(Object),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"               NEW org.apache.druid.indexing.kafka.supervisor.KafkaSupervisorIOConfig(String, InputFormat, Integer, Integer, Period, Map<String,Object>, Long, Period, Period, Boolean, Period, Period, Period, DateTime)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"               NEW anonymous(HttpClient, ObjectMapper)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"               ASSERT org.junit.Assert.assertEquals(long, long)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"               ASSERT org.junit.Assert.assertEquals(Object, Object)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"               ASSERT org.junit.Assert.assertEquals(long, long)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,               NEW org.joda.time.Period(Object),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"               NEW org.apache.druid.indexing.kafka.supervisor.KafkaSupervisorTuningConfig(Integer, Long, Integer, Long, Period, File, Integer, IndexSpec, IndexSpec, Boolean, Boolean, Long, Boolean, SegmentWriteOutMediumFactory, Integer, Integer, Long, Period, Period, Period, Period, Boolean, Integer, Integer)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,               NEW org.apache.druid.server.metrics.NoopServiceEmitter(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,               NEW org.apache.druid.server.metrics.DruidMonitorSchedulerConfig(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,               NEW org.apache.druid.indexing.overlord.supervisor.SupervisorStateManagerConfig(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"               NEW org.apache.druid.indexing.kafka.supervisor.KafkaSupervisorSpec(KafkaSupervisorIngestionSpec, DataSchema, KafkaSupervisorTuningConfig, KafkaSupervisorIOConfig, Map<String,Object>, Boolean, TaskStorage, TaskMaster, IndexerMetadataStorageCoordinator, KafkaIndexTaskClientFactory, ObjectMapper, ServiceEmitter, DruidMonitorSchedulerConfig, RowIngestionMetersFactory, SupervisorStateManagerConfig)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"               NEW org.apache.druid.indexing.kafka.supervisor.KafkaSupervisorTest.TestableKafkaSupervisor(TaskStorage, TaskMaster, IndexerMetadataStorageCoordinator, KafkaIndexTaskClientFactory, ObjectMapper, KafkaSupervisorSpec, RowIngestionMetersFactory)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.kafka.supervisor.KafkaSupervisor.getTuningConfig(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,                    TEST org.apache.druid.indexing.kafka.test.TestBroker.getPort(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"                    org.apache.druid.java.util.common.StringUtils.format(String, Object[])",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"     NEW org.apache.kafka.clients.admin.NewTopic(String, int, short)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"               TEST org.apache.druid.indexing.kafka.test.TestBroker.commonClientProperties(Map<String,Object>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"          NEW org.apache.kafka.clients.producer.KafkaProducer<byte[],byte[]>(Map<String,Object>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"     org.apache.druid.java.util.common.StringUtils.format(String, Object[])",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,     org.apache.druid.java.util.common.StringUtils.toUtf8(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"     NEW org.apache.kafka.clients.producer.ProducerRecord<byte[],byte[]>(String, Integer, byte[], byte[])",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"NEW org.apache.druid.indexing.seekablestream.SeekableStreamStartSequenceNumbers<java.lang.Integer,java.lang.Long>(String, Map<Integer,Long>, Set<Integer>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"NEW org.apache.druid.indexing.seekablestream.SeekableStreamEndSequenceNumbers<java.lang.Integer,java.lang.Long>(String, Map<Integer,Long>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,          org.apache.druid.data.input.impl.StringDimensionSchema.create(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,          org.apache.druid.data.input.impl.StringDimensionSchema.create(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"          NEW org.apache.druid.data.input.impl.TimestampSpec(String, String, DateTime)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"          NEW org.apache.druid.data.input.impl.DimensionsSpec(List<DimensionSchema>, List<String>, List<SpatialDimensionSchema>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"          NEW org.apache.druid.segment.indexing.granularity.UniformGranularitySpec(Granularity, Granularity, List<Interval>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"          NEW org.apache.druid.segment.indexing.DataSchema(String, TimestampSpec, DimensionsSpec, AggregatorFactory[], GranularitySpec, TransformSpec)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,          NEW org.apache.druid.query.aggregation.CountAggregatorFactory(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,          org.apache.druid.indexing.kafka.supervisor.KafkaSupervisorTuningConfig.convertToTaskTuningConfig(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"               NEW org.apache.druid.indexing.kafka.KafkaIndexTaskIOConfig(int, String, SeekableStreamStartSequenceNumbers<Integer,Long>, SeekableStreamEndSequenceNumbers<Integer,Long>, Map<String,Object>, Long, Boolean, DateTime, DateTime, InputFormat)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,               NEW org.apache.druid.segment.realtime.appenderator.DummyForInjectionAppenderatorsManager(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"               NEW org.apache.druid.indexing.kafka.KafkaIndexTask(String, TaskResource, DataSchema, KafkaIndexTaskTuningConfig, KafkaIndexTaskIOConfig, Map<String,Object>, ChatHandlerProvider, AuthorizerMapper, RowIngestionMetersFactory, ObjectMapper, AppenderatorsManager)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"NEW org.apache.druid.indexing.seekablestream.SeekableStreamStartSequenceNumbers<java.lang.Integer,java.lang.Long>(String, Map<Integer,Long>, Set<Integer>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"NEW org.apache.druid.indexing.seekablestream.SeekableStreamEndSequenceNumbers<java.lang.Integer,java.lang.Long>(String, Map<Integer,Long>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"TEST org.apache.druid.indexing.kafka.supervisor.KafkaSupervisorTest.createKafkaIndexTask(String, String, int, SeekableStreamStartSequenceNumbers<Integer,Long>, SeekableStreamEndSequenceNumbers<Integer,Long>, DateTime, DateTime, KafkaSupervisorTuningConfig)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"NEW org.apache.druid.indexing.kafka.supervisor.KafkaSupervisorTest.TestTaskRunnerWorkItem(Task, ListenableFuture<TaskStatus>, TaskLocation)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"NEW org.apache.druid.indexing.kafka.supervisor.KafkaSupervisorTest.TestTaskRunnerWorkItem(Task, ListenableFuture<TaskStatus>, TaskLocation)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.overlord.TaskMaster.getTaskQueue(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(Optional<TaskQueue>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.overlord.TaskQueue>>.andReturn(Optional<TaskQueue>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.overlord.TaskQueue>>.anyTimes(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.overlord.TaskMaster.getTaskRunner(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(Optional<TaskRunner>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.overlord.TaskRunner>>.andReturn(Optional<TaskRunner>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.overlord.TaskRunner>>.anyTimes(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.overlord.TaskRunner.getRunningTasks(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(Collection<>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<java.util.Collection<>>.andReturn(Collection<>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters.anyTimes(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.overlord.TaskStorage.getActiveTasksByDatasource(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(List<Task>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<java.util.List<org.apache.druid.indexing.common.task.Task>>.andReturn(List<Task>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<java.util.List<org.apache.druid.indexing.common.task.Task>>.anyTimes(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.overlord.TaskStorage.getStatus(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(Optional<TaskStatus>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexer.TaskStatus.running(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexer.TaskStatus>>.andReturn(Optional<TaskStatus>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexer.TaskStatus>>.anyTimes(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.overlord.TaskStorage.getStatus(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(Optional<TaskStatus>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexer.TaskStatus.running(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexer.TaskStatus>>.andReturn(Optional<TaskStatus>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexer.TaskStatus>>.anyTimes(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.overlord.TaskStorage.getTask(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(Optional<Task>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.common.task.Task>>.andReturn(Optional<Task>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.common.task.Task>>.anyTimes(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.overlord.TaskStorage.getTask(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(Optional<Task>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.common.task.Task>>.andReturn(Optional<Task>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.base.Optional<org.apache.druid.indexing.common.task.Task>>.anyTimes(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.overlord.IndexerMetadataStorageCoordinator.retrieveDataSourceMetadata(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(DataSourceMetadata),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"NEW org.apache.druid.indexing.kafka.KafkaDataSourceMetadata(SeekableStreamSequenceNumbers<Integer,Long>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<org.apache.druid.indexing.overlord.DataSourceMetadata>.andReturn(DataSourceMetadata),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<org.apache.druid.indexing.overlord.DataSourceMetadata>.anyTimes(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getStatusAsync(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(ListenableFuture<Status>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner.Status>>.andReturn(ListenableFuture<Status>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getStatusAsync(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(ListenableFuture<Status>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskRunner.Status>>.andReturn(ListenableFuture<Status>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getStartTimeAsync(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.expect(ListenableFuture<DateTime>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<org.joda.time.DateTime>>.andReturn(ListenableFuture<DateTime>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getCurrentOffsetsAsync(String, boolean)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"MOCK org.easymock.EasyMock.expect(ListenableFuture<Map<Integer,Long>>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<java.util.Map<java.lang.Integer,java.lang.Long>>>.andReturn(ListenableFuture<Map<Integer,Long>>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getEndOffsets(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"MOCK org.easymock.EasyMock.expect(Map<Integer,Long>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"MOCK org.easymock.IExpectationSetters<java.util.Map<java.lang.Integer,java.lang.Long>>.andReturn(Map<Integer,Long>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getCurrentOffsetsAsync(String, boolean)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"MOCK org.easymock.EasyMock.expect(ListenableFuture<Map<Integer,Long>>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<java.util.Map<java.lang.Integer,java.lang.Long>>>.andReturn(ListenableFuture<Map<Integer,Long>>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.anyObject(Class<TaskRunnerListener>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.anyObject(Class<Executor>),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"org.apache.druid.indexing.overlord.TaskRunner.registerListener(TaskRunnerListener, Executor)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.contains(String),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMock.anyBoolean(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"org.apache.druid.indexing.seekablestream.SeekableStreamIndexTaskClient.getCheckpointsAsync(String, boolean)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"MOCK org.easymock.EasyMock.expect(ListenableFuture<TreeMap<Integer,Map<Integer,Long>>>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<java.util.TreeMap<java.lang.Integer,java.util.Map<java.lang.Integer,java.lang.Long>>>>.andReturn(ListenableFuture<TreeMap<Integer,Map<Integer,Long>>>)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"MOCK org.easymock.IExpectationSetters<com.google.common.util.concurrent.ListenableFuture<java.util.TreeMap<java.lang.Integer,java.util.Map<java.lang.Integer,java.lang.Long>>>>.times(int)",0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMockSupport.replayAll(),0
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisor.start(),1
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisor.runInternal(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisor.updateCurrentAndLatestOffsets(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisor.getStatus(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,MOCK org.easymock.EasyMockSupport.verifyAll(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.overlord.supervisor.SupervisorReport.getId(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.overlord.supervisor.SupervisorReport.getPayload(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getDataSource(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getDurationSeconds(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(long, long)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getPartitions(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(long, long)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getReplicas(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(long, long)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getStream(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getActiveTasks(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(long, long)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getPublishingTasks(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(long, long)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getDetailedState(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getRecentErrors(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(long, long)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getActiveTasks(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getPublishingTasks(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.TaskReportData.getId(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.TaskReportData.getStartTime(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.TaskReportData.getStartingOffsets(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.TaskReportData.getCurrentOffsets(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.TaskReportData.getLag(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.TaskReportData.getId(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.TaskReportData.getStartingOffsets(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.TaskReportData.getCurrentOffsets(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.TaskReportData.getLag(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,ASSERT org.junit.Assert.assertNull(Object),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getLatestOffsets(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getMinimumLag(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(Object, Object)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,"ASSERT org.junit.Assert.assertEquals(long, long)",2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getAggregateLag(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,org.apache.druid.indexing.seekablestream.supervisor.SeekableStreamSupervisorReportPayload.getOffsetsLastUpdated(),2
KafkaSupervisorTest,testDiscoverExistingPublishingAndReadingTask,ASSERT org.junit.Assert.assertTrue(boolean),2
